{"version":3,"sources":["components/form/SearchInput.tsx","api/pokeApiConfig.ts","components/ElementsList.tsx","const/PokemonActionName.ts","const/AbilityActionName.ts","const/TypeActionName.ts","reducers/mainReducer.ts","store/mainStore.ts","utils/PokemonUtil.ts","actions/PokemonActions.ts","actions/TypeActions.ts","actions/AbilityActions.ts","utils/TypeUtil.ts","utils/AbilityUtil.ts","layouts/MainPage.tsx","const/Routes.ts","layouts/PokemonDetails.tsx","GlobalStyles.ts","components/Logo.tsx","components/InProgress.tsx","layouts/TypeDetails.tsx","layouts/AbilityDetails.tsx","App.tsx","index.tsx","assets/img/pokeLogo.png"],"names":["withRouter","props","StyledSearchInput","className","id","onSelect","name","pokemonName","history","push","getInputProps","getItemProps","getLabelProps","getMenuProps","highlightedIndex","inputValue","isOpen","selectedItem","placeholder","onBlur","onFocus","inputProps","InputProps","ref","other","TextField","inputRef","renderInput","fullWidth","InputLabelProps","shrink","Paper","square","value","suggestions","showEmpty","trim","toLowerCase","inputLength","length","count","filter","suggestion","keep","slice","getSuggestions","map","index","suggestionProps","itemProps","isHighlighted","isSelected","indexOf","MenuItem","key","selected","component","style","fontWeight","renderSuggestion","item","styled","div","pokeApi","axios","create","baseURL","timeout","PokemonActionName","StyledList","List","StyledHeader","ListSubheader","StyledListElement","NavLink","StyledLoaderWrappe","ElementsList","list","listTitle","listElements","subheader","CircularProgress","element","to","pathname","urlType","ListItem","button","ListItemText","primary","AbilityActionName","TypeActionName","initialState","pokemons","abilities","types","pokemonsDetails","rootReducer","state","action","type","ADD_POKEMONS","payload","ADD_TYPES","ADD_ABILITIES","ADD_POKEMON","mainStore","createStore","composeWithDevTools","PokemonUtil","pokemon","sprites","front_default","height","weight","stats","getState","find","PokemonActions","getName","avatarUrl","getAvatarUrl","getAbilities","getHeight","getWeight","getTypes","getStats","TypeActions","AbilityActions","TypeUtil","AbilityUtil","ListTypes","StyledMainPage","SearchInput","StyledButtonWrapper","StyledButton","Button","Routes","MainPage","setCurrentList","listFromStore","listTypeChecker","pokemonCallback","getAllPokemons","typesCallback","getAllTypes","abilitiesCallback","getAllAbilities","setState","currentList","fetchDataAndSetInStore","error","console","log","get","listType","then","res","fetchedElements","data","results","addPokemons","addTypes","addAbilities","callback","POKEMONS","TYPES","ABILITIES","onButtonClickHandler","buttonType","renderCategoryButtons","Typography","variant","color","ButtonGroup","aria-label","onClick","renderSearchField","renderList","listTitles","currentListTitle","this","React","Component","connect","dispatch","StyledPokemonInfoWrapper","StyledAvatar","Avatar","StyledTitle","StyledBasicInfo","StyledSubTitle","StyledInfoBox","span","StyledStatItem","PokemonDetails","setCurrentPokemon","match","params","currentPokemon","getByName","addPokemonDetails","renderDetails","abilitiesName","forEach","ability","typesName","src","alt","join","renderStats","toFixed","stat","base_stat","LinearProgress","addPokemonWithDetails","GlobalStyle","createGlobalStyle","StyledLogoWrapper","img","Logo","logo","StyledInProgressWrapper","InProgress","TypeDetails","AbilityDetails","App","store","exact","path","HOME","POKEMON","TYPE","ABILITY","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.2aa5973d.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Downshift from \"downshift\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport MenuItem, { MenuItemProps } from \"@material-ui/core/MenuItem\";\r\nimport { TextField } from \"@material-ui/core\";\r\nimport { TextFieldProps } from \"@material-ui/core/TextField\";\r\nimport { IFetchDefElement } from \"../../interfaces/IFetchDefElement\";\r\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\ntype RenderInputProps = TextFieldProps & {\r\n\tref?: React.Ref<HTMLDivElement>;\r\n};\r\n\r\nfunction renderInput(inputProps: RenderInputProps) {\r\n\tconst { InputProps, ref, ...other } = inputProps;\r\n\r\n\treturn (\r\n\t\t<TextField\r\n\t\t\tInputProps={{\r\n\t\t\t\tinputRef: ref,\r\n\t\t\t\t...InputProps\r\n\t\t\t}}\r\n\t\t\t{...other}\r\n\t\t/>\r\n\t);\r\n}\r\n\r\ninterface RenderSuggestionProps {\r\n\thighlightedIndex: number | null;\r\n\tindex: number;\r\n\titemProps: MenuItemProps<\"div\", { button?: never }>;\r\n\tselectedItem: IFetchDefElement[\"name\"];\r\n\tsuggestion: IFetchDefElement;\r\n}\r\n\r\nfunction renderSuggestion(suggestionProps: RenderSuggestionProps) {\r\n\tconst {\r\n\t\tsuggestion,\r\n\t\tindex,\r\n\t\titemProps,\r\n\t\thighlightedIndex,\r\n\t\tselectedItem\r\n\t} = suggestionProps;\r\n\tconst isHighlighted = highlightedIndex === index;\r\n\tconst isSelected = (selectedItem || \"\").indexOf(suggestion.name) > -1;\r\n\r\n\treturn (\r\n\t\t<MenuItem\r\n\t\t\t{...itemProps}\r\n\t\t\tkey={suggestion.name}\r\n\t\t\tselected={isHighlighted}\r\n\t\t\tcomponent=\"div\"\r\n\t\t\tstyle={{\r\n\t\t\t\tfontWeight: isSelected ? 500 : 400\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{suggestion.name}\r\n\t\t</MenuItem>\r\n\t);\r\n}\r\n\r\nfunction getSuggestions(\r\n\tvalue: string,\r\n\tsuggestions: any[],\r\n\t{ showEmpty = false } = {}\r\n) {\r\n\tconst inputValue = value.trim().toLowerCase();\r\n\tconst inputLength = inputValue.length;\r\n\tlet count = 0;\r\n\treturn inputLength === 0 && !showEmpty\r\n\t\t? []\r\n\t\t: suggestions.filter((suggestion: any) => {\r\n\t\t\t\tconst keep =\r\n\t\t\t\t\tcount < 15 &&\r\n\t\t\t\t\tsuggestion.name.slice(0, inputLength).toLowerCase() === inputValue;\r\n\r\n\t\t\t\tif (keep) {\r\n\t\t\t\t\tcount += 1;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn keep;\r\n\t\t  });\r\n}\r\n\r\ntype Props = RouteComponentProps<{}> &\r\n\tReact.HTMLProps<React.HTMLAttributes<HTMLElement>> & {\r\n\t\tsuggestions: IFetchDefElement[];\r\n\t};\r\n\r\nfunction SearchInput(props: Props) {\r\n\tconst onClickSuggestionHandler = (pokemonName: string) => {\r\n\t\tprops.history.push(`pokemon/details/${pokemonName}`);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<StyledSearchInput className={props.className}>\r\n\t\t\t<Downshift\r\n\t\t\t\tid=\"downshift-simple\"\r\n\t\t\t\tonSelect={name => onClickSuggestionHandler(name)}\r\n\t\t\t>\r\n\t\t\t\t{({\r\n\t\t\t\t\tgetInputProps,\r\n\t\t\t\t\tgetItemProps,\r\n\t\t\t\t\tgetLabelProps,\r\n\t\t\t\t\tgetMenuProps,\r\n\t\t\t\t\thighlightedIndex,\r\n\t\t\t\t\tinputValue,\r\n\t\t\t\t\tisOpen,\r\n\t\t\t\t\tselectedItem\r\n\t\t\t\t}) => {\r\n\t\t\t\t\tconst { onBlur, onFocus, ...inputProps } = getInputProps({\r\n\t\t\t\t\t\tplaceholder: \"Search in the list\"\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t{renderInput({\r\n\t\t\t\t\t\t\t\tfullWidth: true,\r\n\t\t\t\t\t\t\t\tInputLabelProps: getLabelProps({ shrink: true } as any),\r\n\t\t\t\t\t\t\t\tInputProps: { onBlur, onFocus },\r\n\t\t\t\t\t\t\t\tinputProps\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t<div {...getMenuProps()}>\r\n\t\t\t\t\t\t\t\t{isOpen ? (\r\n\t\t\t\t\t\t\t\t\t<Paper square>\r\n\t\t\t\t\t\t\t\t\t\t{getSuggestions(inputValue!, props.suggestions).map(\r\n\t\t\t\t\t\t\t\t\t\t\t(suggestion: any, index: number) =>\r\n\t\t\t\t\t\t\t\t\t\t\t\trenderSuggestion({\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsuggestion,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tindex,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\titemProps: getItemProps({ item: suggestion.name }),\r\n\t\t\t\t\t\t\t\t\t\t\t\t\thighlightedIndex,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tselectedItem\r\n\t\t\t\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</Paper>\r\n\t\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t}}\r\n\t\t\t</Downshift>\r\n\t\t</StyledSearchInput>\r\n\t);\r\n}\r\n\r\nexport default withRouter(SearchInput);\r\n\r\nconst StyledSearchInput = styled.div`\r\n\tmargin-bottom: 40px;\r\n`;\r\n","import axios from \"axios\";\r\n\r\nconst pokeApi = axios.create({\r\n\tbaseURL: \"https://pokeapi.co/api/v2/\",\r\n\ttimeout: 2000\r\n});\r\n\r\nexport default pokeApi;\r\n","import React from \"react\";\r\nimport ListSubheader from \"@material-ui/core/ListSubheader\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { CircularProgress } from \"@material-ui/core\";\r\n\r\nconst StyledList = styled(List)`\r\n\tleft: 50%;\r\n\ttransform: translateX(-50%);\r\n\tmargin: 40px 0;\r\n\tmax-width: 600px;\r\n\tborder: 1px solid #f73651;\r\n\tborder-radius: 8px;\r\n\toverflow: hidden;\r\n`;\r\n\r\nconst StyledHeader = styled(ListSubheader)`\r\n\t&&& {\r\n\t\tbackground-color: white;\r\n\t}\r\n`;\r\n\r\nconst StyledListElement = styled(NavLink)`\r\n\ttext-decoration: none;\r\n\tcolor: #f73651;\r\n`;\r\n\r\nconst StyledLoaderWrappe = styled.div`\r\n\tdisplay: flex;\r\n\tjustify-content: center;\r\n\tpadding: 40px 0;\r\n`;\r\n\r\ninterface listElements {\r\n\tname: string;\r\n\turl: string;\r\n}\r\n\r\ninterface Props {\r\n\tlistTitle: string;\r\n\tlistElements: listElements[];\r\n\turlType: any;\r\n}\r\n\r\nconst ElementsList = (props: Props) => {\r\n\tconst renderList = (list: any[]) => {\r\n\t\tif (list.length === 0) {\r\n\t\t\treturn (\r\n\t\t\t\t<StyledLoaderWrappe>\r\n\t\t\t\t\t<CircularProgress />\r\n\t\t\t\t</StyledLoaderWrappe>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn list.map((element: listElements) => {\r\n\t\t\treturn (\r\n\t\t\t\t<StyledListElement\r\n\t\t\t\t\tto={{\r\n\t\t\t\t\t\tpathname: `${props.urlType}/details/${element.name}`\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tkey={element.name}\r\n\t\t\t\t>\r\n\t\t\t\t\t<ListItem button>\r\n\t\t\t\t\t\t<ListItemText primary={element.name} />\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t</StyledListElement>\r\n\t\t\t);\r\n\t\t});\r\n\t};\r\n\r\n\tconst { listTitle, listElements } = props;\r\n\treturn (\r\n\t\t<StyledList subheader={<StyledHeader>{listTitle}</StyledHeader>}>\r\n\t\t\t{renderList(listElements)}\r\n\t\t</StyledList>\r\n\t);\r\n};\r\n\r\nexport default ElementsList;\r\n","export enum PokemonActionName {\r\n\tADD_POKEMONS = \"ADD_POKEMONS\",\r\n\tADD_POKEMON = \"ADD_POKEMON\"\r\n}\r\n","export enum AbilityActionName {\r\n\tADD_ABILITIES = \"ADD_ABILITIES\"\r\n}\r\n","export enum TypeActionName {\r\n\tADD_TYPES = \"ADD_TYPES\"\r\n}\r\n","import { AbilityActionName } from \"./../const/AbilityActionName\";\r\nimport { TypeActionName } from \"./../const/TypeActionName\";\r\nimport { IFetchDefElement } from \"../interfaces/IFetchDefElement\";\r\nimport { PokemonActionName } from \"../const/PokemonActionName\";\r\nimport { IPokemonDetails } from \"../interfaces/IPokemonDetails\";\r\n\r\nexport type MainStore = {\r\n\tpokemons: IFetchDefElement[];\r\n\tabilities: IFetchDefElement[];\r\n\ttypes: IFetchDefElement[];\r\n\tpokemonsDetails: IPokemonDetails[];\r\n};\r\n\r\nconst initialState: MainStore = {\r\n\tpokemons: [],\r\n\tabilities: [],\r\n\ttypes: [],\r\n\tpokemonsDetails: []\r\n};\r\n\r\nconst rootReducer = (state = initialState as any, action: any) => {\r\n\tswitch (action.type) {\r\n\t\tcase PokemonActionName.ADD_POKEMONS:\r\n\t\t\tif (state.pokemons.length === action.payload.length) return state;\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tpokemons: [...action.payload]\r\n\t\t\t};\r\n\t\tcase TypeActionName.ADD_TYPES:\r\n\t\t\tif (state.types.length === action.payload.length) return state;\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttypes: [...action.payload]\r\n\t\t\t};\r\n\t\tcase AbilityActionName.ADD_ABILITIES:\r\n\t\t\tif (state.abilities.length === action.payload.length) return state;\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tabilities: [...action.payload]\r\n\t\t\t};\r\n\t\tcase PokemonActionName.ADD_POKEMON:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tpokemonsDetails: [...state.pokemonsDetails, action.payload]\r\n\t\t\t};\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n\r\nexport default rootReducer;\r\n","import { createStore } from \"redux\";\r\nimport rootReducer from \"../reducers/mainReducer\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nconst mainStore = createStore(rootReducer, composeWithDevTools());\r\n\r\nexport default mainStore;\r\n","import { IStats } from \"./../interfaces/IPokemonInfo\";\r\nimport { IFetchDefElement } from \"./../interfaces/IFetchDefElement\";\r\nimport { IPokemonInfo, ITypes, IAbility } from \"../interfaces/IPokemonInfo\";\r\nimport { MainStore } from \"./../reducers/mainReducer\";\r\nimport mainStore from \"../store/mainStore\";\r\nimport { IPokemonDetails } from \"../interfaces/IPokemonDetails\";\r\n\r\nclass PokemonUtil {\r\n\tpublic static getAvatarUrl(pokemon: IPokemonInfo): string {\r\n\t\treturn pokemon.sprites.front_default;\r\n\t}\r\n\r\n\tpublic static getAbilities(pokemon: IPokemonInfo): IAbility[] {\r\n\t\treturn pokemon.abilities;\r\n\t}\r\n\r\n\tpublic static getName(pokemon: IPokemonInfo): string {\r\n\t\treturn pokemon.name;\r\n\t}\r\n\r\n\tpublic static getHeight(pokemon: IPokemonInfo): number {\r\n\t\treturn pokemon.height;\r\n\t}\r\n\r\n\tpublic static getWeight(pokemon: IPokemonInfo): number {\r\n\t\treturn pokemon.weight;\r\n\t}\r\n\r\n\tpublic static getTypes(pokemon: IPokemonInfo): ITypes[] {\r\n\t\treturn pokemon.types;\r\n\t}\r\n\r\n\tpublic static getStats(pokemon: IPokemonInfo): IStats[] {\r\n\t\treturn pokemon.stats;\r\n\t}\r\n\r\n\tpublic static getByName(name: string) {\r\n\t\tconst store = mainStore.getState() as MainStore;\r\n\t\treturn store.pokemonsDetails.find(\r\n\t\t\t(pokemon: IPokemonDetails) => pokemon.name === name\r\n\t\t);\r\n\t}\r\n\r\n\tpublic static getAllPokemons(): IFetchDefElement[] {\r\n\t\tconst store = mainStore.getState() as MainStore;\r\n\t\treturn store.pokemons;\r\n\t}\r\n}\r\n\r\nexport default PokemonUtil;\r\n","import { IFetchDefElement } from \"../interfaces/IFetchDefElement\";\r\nimport { PokemonActionName } from \"../const/PokemonActionName\";\r\nimport { IPokemonInfo } from \"../interfaces/IPokemonInfo\";\r\nimport PokemonUtil from \"../utils/PokemonUtil\";\r\n\r\nclass PokemonActions {\r\n\tpublic static addPokemons(pokemons: IFetchDefElement[]) {\r\n\t\treturn {\r\n\t\t\ttype: PokemonActionName.ADD_POKEMONS,\r\n\t\t\tpayload: pokemons\r\n\t\t};\r\n\t}\r\n\r\n\tpublic static addPokemonWithDetails(pokemon: IPokemonInfo) {\r\n\t\tconst payload = {\r\n\t\t\tname: PokemonUtil.getName(pokemon),\r\n\t\t\tavatarUrl: PokemonUtil.getAvatarUrl(pokemon),\r\n\t\t\tabilities: PokemonUtil.getAbilities(pokemon),\r\n\t\t\theight: PokemonUtil.getHeight(pokemon),\r\n\t\t\tweight: PokemonUtil.getWeight(pokemon),\r\n\t\t\ttypes: PokemonUtil.getTypes(pokemon),\r\n\t\t\tstats: PokemonUtil.getStats(pokemon)\r\n\t\t};\r\n\t\treturn {\r\n\t\t\ttype: PokemonActionName.ADD_POKEMON,\r\n\t\t\tpayload\r\n\t\t};\r\n\t}\r\n}\r\n\r\nexport default PokemonActions;\r\n","import { TypeActionName } from \"../const/TypeActionName\";\r\nimport { IFetchDefElement } from \"../interfaces/IFetchDefElement\";\r\n\r\nclass TypeActions {\r\n\tpublic static addTypes(types: IFetchDefElement[]) {\r\n\t\treturn {\r\n\t\t\ttype: TypeActionName.ADD_TYPES,\r\n\t\t\tpayload: types\r\n\t\t};\r\n\t}\r\n}\r\n\r\nexport default TypeActions;\r\n","import { IFetchDefElement } from \"../interfaces/IFetchDefElement\";\r\nimport { AbilityActionName } from \"../const/AbilityActionName\";\r\n\r\nclass AbilityActions {\r\n\tpublic static addAbilities(abilities: IFetchDefElement[]) {\r\n\t\treturn {\r\n\t\t\ttype: AbilityActionName.ADD_ABILITIES,\r\n\t\t\tpayload: abilities\r\n\t\t};\r\n\t}\r\n}\r\n\r\nexport default AbilityActions;\r\n","import { MainStore } from \"./../reducers/mainReducer\";\r\nimport { IFetchDefElement } from \"./../interfaces/IFetchDefElement\";\r\nimport mainStore from \"../store/mainStore\";\r\nclass TypeUtil {\r\n\tpublic static getAllTypes(): IFetchDefElement[] {\r\n\t\tconst store = mainStore.getState() as MainStore;\r\n\t\treturn store.types;\r\n\t}\r\n}\r\n\r\nexport default TypeUtil;\r\n","import { MainStore } from \"./../reducers/mainReducer\";\r\nimport { IFetchDefElement } from \"./../interfaces/IFetchDefElement\";\r\nimport mainStore from \"../store/mainStore\";\r\n\r\nclass AbilityUtil {\r\n\tpublic static getAllAbilities(): IFetchDefElement[] {\r\n\t\tconst store = mainStore.getState() as MainStore;\r\n\t\treturn store.abilities;\r\n\t}\r\n}\r\n\r\nexport default AbilityUtil;\r\n","import React from \"react\";\r\nimport SearchInput from \"../components/form/SearchInput\";\r\nimport { connect } from \"react-redux\";\r\nimport { MainStore } from \"../reducers/mainReducer\";\r\nimport { IFetchDefElement } from \"../interfaces/IFetchDefElement\";\r\nimport styled from \"styled-components\";\r\nimport { ButtonGroup, Button, Typography } from \"@material-ui/core\";\r\nimport pokeApi from \"../api/pokeApiConfig\";\r\nimport ElementsList from \"../components/ElementsList\";\r\nimport PokemonActions from \"../actions/PokemonActions\";\r\nimport TypeActions from \"../actions/TypeActions\";\r\nimport AbilityActions from \"../actions/AbilityActions\";\r\nimport PokemonUtil from \"../utils/PokemonUtil\";\r\nimport TypeUtil from \"../utils/TypeUtil\";\r\nimport AbilityUtil from \"../utils/AbilityUtil\";\r\n\r\nconst StyledMainPage = styled.div`\r\n\tbackground-color: white;\r\n\tborder-radius: 8px;\r\n\tmax-width: 900px;\r\n\tpadding: 40px;\r\n\tmargin: 0 auto;\r\n`;\r\n\r\nconst StyledSearchInput = styled(SearchInput)`\r\n\t&&& {\r\n\t\tposition: relative;\r\n\t\tmax-width: 600px;\r\n\t\tleft: 50%;\r\n\t\ttransform: translateX(-50%);\r\n\t}\r\n`;\r\n\r\nconst StyledButtonWrapper = styled.div`\r\n\tmax-width: 600px;\r\n\tmargin: 0 auto;\r\n\tmargin-bottom: 40px;\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n\t&&& {\r\n\t\tbackground-color: #3b4cca;\r\n\t\tcolor: white;\r\n\t}\r\n`;\r\n\r\nenum ListTypes {\r\n\tPOKEMONS = \"pokemon\",\r\n\tABILITIES = \"ability\",\r\n\tTYPES = \"type\"\r\n}\r\n\r\ninterface ICallbacksChecker {\r\n\tpokemonCallback: (...args: any) => void;\r\n\tabilitiesCallback: (...args: any) => void;\r\n\ttypesCallback: (...args: any) => void;\r\n}\r\ninterface Props {\r\n\tpokemons: IFetchDefElement[];\r\n\taddPokemons: (pokemons: IFetchDefElement[]) => void;\r\n\taddTypes: (types: IFetchDefElement[]) => void;\r\n\taddAbilities: (pokemons: IFetchDefElement[]) => void;\r\n}\r\n\r\ninterface State {\r\n\tcurrentList: IFetchDefElement[];\r\n\tlistType: ListTypes;\r\n}\r\n\r\nclass MainPage extends React.Component<Props, State> {\r\n\tconstructor(props: Props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tcurrentList: [],\r\n\t\t\tlistType: ListTypes.POKEMONS\r\n\t\t};\r\n\t}\r\n\r\n\tpublic componentDidMount() {\r\n\t\tthis.setCurrentList();\r\n\t}\r\n\r\n\tprivate setCurrentList = () => {\r\n\t\tlet listFromStore: IFetchDefElement[] = [];\r\n\t\tthis.listTypeChecker({\r\n\t\t\tpokemonCallback: () => (listFromStore = PokemonUtil.getAllPokemons()),\r\n\t\t\ttypesCallback: () => (listFromStore = TypeUtil.getAllTypes()),\r\n\t\t\tabilitiesCallback: () => (listFromStore = AbilityUtil.getAllAbilities())\r\n\t\t});\r\n\t\tif (listFromStore.length > 0) {\r\n\t\t\tthis.setState({\r\n\t\t\t\t...this.state,\r\n\t\t\t\tcurrentList: listFromStore\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\ttry {\r\n\t\t\t\tthis.fetchDataAndSetInStore();\r\n\t\t\t} catch (error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tprivate fetchDataAndSetInStore = () => {\r\n\t\tthis.setState({ ...this.state, currentList: [] });\r\n\r\n\t\tpokeApi.get(`${this.state.listType}?offset=0&limit=1000`).then(res => {\r\n\t\t\tconst fetchedElements = res.data.results;\r\n\t\t\tthis.setState({ currentList: fetchedElements });\r\n\r\n\t\t\tthis.listTypeChecker({\r\n\t\t\t\tpokemonCallback: () => this.props.addPokemons(fetchedElements),\r\n\t\t\t\ttypesCallback: () => this.props.addTypes(fetchedElements),\r\n\t\t\t\tabilitiesCallback: () => this.props.addAbilities(fetchedElements)\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n\r\n\tprivate listTypeChecker = (callback: ICallbacksChecker) => {\r\n\t\tswitch (this.state.listType) {\r\n\t\t\tcase ListTypes.POKEMONS:\r\n\t\t\t\tcallback.pokemonCallback();\r\n\t\t\t\tbreak;\r\n\t\t\tcase ListTypes.TYPES:\r\n\t\t\t\tcallback.typesCallback();\r\n\t\t\t\tbreak;\r\n\t\t\tcase ListTypes.ABILITIES:\r\n\t\t\t\tcallback.abilitiesCallback();\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t};\r\n\r\n\tprivate onButtonClickHandler = (buttonType: ListTypes): void => {\r\n\t\tthis.setState(\r\n\t\t\t{\r\n\t\t\t\t...this.state,\r\n\t\t\t\tlistType: buttonType\r\n\t\t\t},\r\n\t\t\tthis.setCurrentList\r\n\t\t);\r\n\t};\r\n\r\n\t/*\r\n\t\tView methods\r\n\t*/\r\n\r\n\tprivate renderCategoryButtons = () => {\r\n\t\treturn (\r\n\t\t\t<StyledButtonWrapper>\r\n\t\t\t\t<Typography variant=\"h6\" component=\"h2\" style={{ color: \"#0000008a\" }}>\r\n\t\t\t\t\tShow all in category:\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<ButtonGroup fullWidth aria-label=\"full width outlined button group\">\r\n\t\t\t\t\t<StyledButton\r\n\t\t\t\t\t\tonClick={() => this.onButtonClickHandler(ListTypes.POKEMONS)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tPokemons\r\n\t\t\t\t\t</StyledButton>\r\n\t\t\t\t\t<StyledButton\r\n\t\t\t\t\t\tonClick={() => this.onButtonClickHandler(ListTypes.TYPES)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tTypes\r\n\t\t\t\t\t</StyledButton>\r\n\t\t\t\t\t<StyledButton\r\n\t\t\t\t\t\tonClick={() => this.onButtonClickHandler(ListTypes.ABILITIES)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\tAbilities\r\n\t\t\t\t\t</StyledButton>\r\n\t\t\t\t</ButtonGroup>\r\n\t\t\t</StyledButtonWrapper>\r\n\t\t);\r\n\t};\r\n\r\n\tprivate renderSearchField = () => {\r\n\t\treturn <StyledSearchInput suggestions={this.state.currentList} />;\r\n\t};\r\n\r\n\tprivate renderList = () => {\r\n\t\tconst listTitles = [\r\n\t\t\t\"All pokemons list\",\r\n\t\t\t\"All types list\",\r\n\t\t\t\"All abilities list\"\r\n\t\t];\r\n\t\tlet currentListTitle = listTitles[0];\r\n\r\n\t\tif (this.state.listType !== ListTypes.POKEMONS) {\r\n\t\t\tcurrentListTitle =\r\n\t\t\t\tthis.state.listType === ListTypes.TYPES ? listTitles[1] : listTitles[2];\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<ElementsList\r\n\t\t\t\tlistTitle={currentListTitle}\r\n\t\t\t\tlistElements={this.state.currentList}\r\n\t\t\t\turlType={this.state.listType}\r\n\t\t\t/>\r\n\t\t);\r\n\t};\r\n\r\n\tpublic render() {\r\n\t\treturn (\r\n\t\t\t<StyledMainPage>\r\n\t\t\t\t{this.renderCategoryButtons()}\r\n\t\t\t\t{this.renderSearchField()}\r\n\t\t\t\t{this.renderList()}\r\n\t\t\t</StyledMainPage>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state: MainStore) => {\r\n\tconst { pokemons, abilities, types } = state;\r\n\treturn { pokemons, abilities, types };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n\taddPokemons: (pokemons: IFetchDefElement[]) =>\r\n\t\tdispatch(PokemonActions.addPokemons(pokemons)),\r\n\taddTypes: (types: IFetchDefElement[]) =>\r\n\t\tdispatch(TypeActions.addTypes(types)),\r\n\taddAbilities: (abilities: IFetchDefElement[]) =>\r\n\t\tdispatch(AbilityActions.addAbilities(abilities))\r\n});\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(MainPage);\r\n","export enum Routes {\r\n\tHOME = \"/\",\r\n\tPOKEMON = \"/pokemon/details/:name\",\r\n\tTYPE = \"/type/details/:name\",\r\n\tABILITY = \"/ability/details/:name\"\r\n}\r\n","import React, { Component } from \"react\";\r\nimport pokeApi from \"../api/pokeApiConfig\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport {\r\n\tIPokemonInfo,\r\n\tIAbility,\r\n\tITypes,\r\n\tIStats\r\n} from \"../interfaces/IPokemonInfo\";\r\nimport { connect } from \"react-redux\";\r\nimport { MainStore } from \"../reducers/mainReducer\";\r\nimport PokemonActions from \"../actions/PokemonActions\";\r\nimport PokemonUtil from \"../utils/PokemonUtil\";\r\nimport { IPokemonDetails } from \"../interfaces/IPokemonDetails\";\r\nimport styled from \"styled-components\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { Avatar, LinearProgress } from \"@material-ui/core\";\r\n\r\nconst StyledPokemonInfoWrapper = styled.div`\r\n\tposition: relative;\r\n\tdisplay: flex;\r\n\tflex-wrap: wrap;\r\n\talign-items: center;\r\n\tmax-width: 800px;\r\n\tbackground-color: white;\r\n\tborder-radius: 8px;\r\n\tmargin: 0 auto;\r\n\tmargin-top: 80px;\r\n\tpadding: 25px;\r\n`;\r\n\r\nconst StyledAvatar = styled(Avatar)`\r\n\t&&& {\r\n\t\tposition: absolute;\r\n\t\twidth: 120px;\r\n\t\theight: 120px;\r\n\t\tleft: 20px;\r\n\t\ttop: -60px;\r\n\t\tbackground: #ffde00;\r\n\t\tborder: 4px solid white;\r\n\t}\r\n`;\r\n\r\nconst StyledTitle = styled(Typography)`\r\n\tposition: absolute;\r\n\tleft: 150px;\r\n\tcolor: white;\r\n\ttop: -60px;\r\n\ttext-transform: capitalize;\r\n\tfont-weight: 900;\r\n`;\r\n\r\nconst StyledBasicInfo = styled.div`\r\n\tdisplay: flex;\r\n\tpadding-left: 130px;\r\n\tmargin-bottom: 40px;\r\n`;\r\n\r\nconst StyledSubTitle = styled(Typography)`\r\n\t&&& {\r\n\t\tfont-weight: bold;\r\n\t\tmargin-right: 20px;\r\n\t}\r\n`;\r\n\r\nconst StyledInfoBox = styled.span`\r\n\tpadding: 5px 7px;\r\n\tborder-radius: 4px;\r\n\tcolor: white;\r\n\tbackground-color: ${({ color }) => color};\r\n\ttext-transform: capitalize;\r\n`;\r\n\r\nconst StyledStatItem = styled.div`\r\n\twidth: 100%;\r\n\tpadding: 15px 0;\r\n\tborder-bottom: 1px solid #d1d1d1;\r\n\ttext-transform: capitalize;\r\n\r\n\tb {\r\n\t\tfont-weight: bold;\r\n\t}\r\n`;\r\ninterface State {\r\n\tcurrentPokemon: IPokemonDetails;\r\n}\r\n\r\ntype Props = RouteComponentProps<{ name: string }> & {\r\n\taddPokemonDetails: (pokemon: IPokemonInfo) => void;\r\n};\r\n\r\nclass PokemonDetails extends Component<Props, State> {\r\n\tconstructor(props: Props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tcurrentPokemon: null\r\n\t\t};\r\n\t}\r\n\r\n\tpublic componentDidMount() {\r\n\t\tthis.setCurrentPokemon();\r\n\t}\r\n\r\n\tprivate setCurrentPokemon = () => {\r\n\t\tconst pokemonName = this.props.match.params.name;\r\n\t\tlet currentPokemon = PokemonUtil.getByName(pokemonName);\r\n\t\tif (!currentPokemon) {\r\n\t\t\tpokeApi.get(`pokemon/${pokemonName}`).then(res => {\r\n\t\t\t\tthis.props.addPokemonDetails(res.data);\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tcurrentPokemon: PokemonUtil.getByName(res.data.name)\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.setState({\r\n\t\t\t\tcurrentPokemon\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\tprivate renderDetails = () => {\r\n\t\tconst { name, avatarUrl, abilities, types } = this.state.currentPokemon;\r\n\r\n\t\tlet abilitiesName: string[] = [];\r\n\t\tabilities.forEach((ability: IAbility) => {\r\n\t\t\tabilitiesName.push(ability.ability.name);\r\n\t\t});\r\n\t\tlet typesName: string[] = [];\r\n\t\ttypes.forEach((type: ITypes) => {\r\n\t\t\ttypesName.push(type.type.name);\r\n\t\t});\r\n\r\n\t\treturn (\r\n\t\t\t<StyledPokemonInfoWrapper>\r\n\t\t\t\t<StyledAvatar src={avatarUrl} alt={`Avatar of ${name}`}></StyledAvatar>\r\n\t\t\t\t<StyledTitle variant=\"h2\" component=\"h1\">\r\n\t\t\t\t\t{name}\r\n\t\t\t\t</StyledTitle>\r\n\t\t\t\t<StyledBasicInfo>\r\n\t\t\t\t\t<StyledSubTitle>\r\n\t\t\t\t\t\tType:{\" \"}\r\n\t\t\t\t\t\t<StyledInfoBox color=\"#CC0000\">\r\n\t\t\t\t\t\t\t{typesName.join(\", \")}\r\n\t\t\t\t\t\t</StyledInfoBox>\r\n\t\t\t\t\t</StyledSubTitle>\r\n\t\t\t\t\t<StyledSubTitle>\r\n\t\t\t\t\t\tAbility:{\" \"}\r\n\t\t\t\t\t\t<StyledInfoBox color=\"#B3A125\">\r\n\t\t\t\t\t\t\t{abilitiesName.join(\", \")}\r\n\t\t\t\t\t\t</StyledInfoBox>\r\n\t\t\t\t\t</StyledSubTitle>\r\n\t\t\t\t</StyledBasicInfo>\r\n\t\t\t\t{this.renderStats()}\r\n\t\t\t</StyledPokemonInfoWrapper>\r\n\t\t);\r\n\t};\r\n\r\n\tprivate renderStats = () => {\r\n\t\tconst { stats, height, weight } = this.state.currentPokemon;\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<StyledStatItem>\r\n\t\t\t\t\t<Typography variant=\"body1\">\r\n\t\t\t\t\t\tHeight: <b>{(height / 10).toFixed(2)}m</b>\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</StyledStatItem>\r\n\t\t\t\t<StyledStatItem>\r\n\t\t\t\t\t<Typography variant=\"body1\">\r\n\t\t\t\t\t\tWeight: <b>{(weight / 10).toFixed(1)}kg</b>\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t</StyledStatItem>\r\n\t\t\t\t{stats.map((stat: IStats) => {\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<StyledStatItem key={stat.stat.name}>\r\n\t\t\t\t\t\t\t<Typography variant=\"body1\">\r\n\t\t\t\t\t\t\t\t{stat.stat.name}: <b>{stat.base_stat}</b>\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<LinearProgress variant=\"determinate\" value={stat.base_stat} />\r\n\t\t\t\t\t\t</StyledStatItem>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</>\r\n\t\t);\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn <>{this.state.currentPokemon && this.renderDetails()}</>;\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = (state: MainStore) => {\r\n\tconst { pokemonsDetails } = state;\r\n\treturn { pokemonsDetails };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch: any) => ({\r\n\taddPokemonDetails: (pokemon: IPokemonInfo) =>\r\n\t\tdispatch(PokemonActions.addPokemonWithDetails(pokemon))\r\n});\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(PokemonDetails);\r\n","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    /* RESET STYLE  */\r\n    html, body, div, span, applet, object, iframe,\r\n    h1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\n    a, abbr, acronym, address, big, cite, code,\r\n    del, dfn, em, img, ins, kbd, q, s, samp,\r\n    small, strike, strong, sub, sup, tt, var,\r\n    b, u, i, center,\r\n    dl, dt, dd, ol, ul, li,\r\n    fieldset, form, label, legend,\r\n    table, caption, tbody, tfoot, thead, tr, th, td,\r\n    article, aside, canvas, details, embed,\r\n    figure, figcaption, footer, header, hgroup,\r\n    menu, nav, output, ruby, section, summary,\r\n    time, mark, audio, video {\r\n        margin: 0;\r\n        padding: 0;\r\n        border: 0;\r\n        font-size: 100%;\r\n        font: inherit;\r\n        vertical-align: baseline;\r\n    }\r\n    /* HTML5 display-role reset for older browsers */\r\n    article, aside, details, figcaption, figure,\r\n    footer, header, hgroup, menu, nav, section {\r\n        display: block;\r\n    }\r\n    body {\r\n        line-height: 1;\r\n    }\r\n    ol, ul {\r\n        list-style: none;\r\n    }\r\n    blockquote, q {\r\n        quotes: none;\r\n    }\r\n    blockquote:before, blockquote:after,\r\n    q:before, q:after {\r\n        content: '';\r\n        content: none;\r\n    }\r\n    table {\r\n        border-collapse: collapse;\r\n        border-spacing: 0;\r\n    }\r\n\r\n    /* MY STYLE  */\r\n    @import url('https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap');\r\n    @import url('https://fonts.googleapis.com/icon?family=Material+Icons');\r\n\r\n\r\n    *, *::before, *::after{\r\n        box-sizing: border-box;\r\n        -webkit-font-smoothing: antialiased;\r\n        -moz-osx-font-smoothing: grayscale;\r\n    }\r\n\r\n    body{\r\n        padding:30px;\r\n        background-color: #FFDE00;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n`;\r\n","import React from \"react\";\r\nimport logo from \"../assets/img/pokeLogo.png\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledLogoWrapper = styled.img`\r\n\tposition: relative;\r\n\tmax-height: 250px;\r\n\tleft: 50%;\r\n\ttransform: translateX(-50%);\r\n\tmargin-bottom: 40px;\r\n`;\r\n\r\nconst Logo = () => {\r\n\treturn <StyledLogoWrapper src={logo} alt=\"Logo\" />;\r\n};\r\n\r\nexport default Logo;\r\n","import React, { Component } from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport styled from \"styled-components\";\r\n\r\nconst StyledInProgressWrapper = styled.div`\r\n\tmargin: 0 auto;\r\n\tbackground-color: white;\r\n\tborder-radius: 8px;\r\n\tmax-width: 600px;\r\n\tpadding: 30px;\r\n`;\r\n\r\nclass InProgress extends Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<StyledInProgressWrapper>\r\n\t\t\t\t<Typography variant=\"h2\" component=\"h2\">\r\n\t\t\t\t\tIN PROGRESS\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<Typography variant=\"h6\" component=\"h3\">\r\n\t\t\t\t\tSORRY, THIS PAGE IS NOT READY.\r\n\t\t\t\t</Typography>\r\n\t\t\t</StyledInProgressWrapper>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default InProgress;\r\n","import React from \"react\";\r\nimport InProgress from \"../components/InProgress\";\r\n\r\nconst TypeDetails = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<InProgress />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default TypeDetails;\r\n","import React from \"react\";\r\nimport InProgress from \"../components/InProgress\";\r\n\r\nconst AbilityDetails = () => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<InProgress />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default AbilityDetails;\r\n","import React, { Component } from \"react\";\nimport MainPage from \"./layouts/MainPage\";\nimport { Provider } from \"react-redux\";\nimport mainStore from \"./store/mainStore\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport { Routes } from \"./const/Routes\";\nimport PokemonDetails from \"./layouts/PokemonDetails\";\nimport { GlobalStyle } from \"./GlobalStyles\";\nimport Logo from \"./components/Logo\";\nimport TypeDetails from \"./layouts/TypeDetails\";\nimport AbilityDetails from \"./layouts/AbilityDetails\";\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Provider store={mainStore}>\n\t\t\t\t<GlobalStyle />\n\t\t\t\t<div className=\"App\">\n\t\t\t\t\t<Logo />\n\t\t\t\t\t<BrowserRouter>\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route exact path={Routes.HOME} component={MainPage} />\n\t\t\t\t\t\t\t<Route path={Routes.POKEMON} component={PokemonDetails} />\n\t\t\t\t\t\t\t<Route path={Routes.TYPE} component={TypeDetails} />\n\t\t\t\t\t\t\t<Route path={Routes.ABILITY} component={AbilityDetails} />\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</BrowserRouter>\n\t\t\t\t</div>\n\t\t\t</Provider>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","module.exports = __webpack_public_path__ + \"static/media/pokeLogo.1d15b24d.png\";"],"sourceRoot":""}